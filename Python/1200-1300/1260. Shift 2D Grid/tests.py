import unittest

import v1
import v2


class V1Shift2DGridTestCase(unittest.TestCase):
    def test_correct_answers(self):
        sol = v1.Solution()

        res1 = sol.shiftGrid([[1, 2, 3], [2, 3, 4]], 1)
        res2 = sol.shiftGrid([[-649, -730], [-827, 613], [882, 2]], 58)
        res3 = sol.shiftGrid([[-705, 102, -466, 861, 297, -20, -411, 902, 472, 777, 330, -119, -441, 671, -21, -112,
                               -333, 26, -751, 76, 870, 575, -183, -344],
                              [-223, -532, -411, -785, 704, 512, 265, 549, -763, -681, 338, -981, 975, -722, 208, -131,
                               -249, -385, 982, 609, -169, -606, 416, -577],
                              [-461, -350, 652, -397, -871, -8, -638, -311, 689, -827, 647, -925, 342, -520, -813, 972,
                               9, 845, 374, 899, -928, 720, -279, -915],
                              [-795, -808, -965, -768, 239, 322, -903, -570, 732, -8, -629, 480, -946, 198, 280, 539,
                               -690, -7, -754, 474, -192, -390, 482, 880],
                              [-325, 688, -1000, -648, 244, 894, -770, 756, -104, -37, 649, 968, 984, 160, -373, -219,
                               944, -969, 473, 702, -343, 271, 93, -402],
                              [-546, -36, 651, -952, -838, -125, -286, -582, -858, 802, 966, -697, 627, 205, 707, -122,
                               -403, -426, 574, -245, -445, 848, -504, 955],
                              [-260, -30, -275, 576, 735, -483, 667, 630, 742, -950, -855, 71, 273, 610, -819, 493,
                               -996, -74, -112, 255, -712, 190, -579, -805]], 13)
        res4 = sol.shiftGrid([[1], [2], [3], [4], [7], [6], [5]], 23)

        self.assertEqual(res1, [[4, 1, 2], [3, 2, 3]])
        self.assertEqual(res2, [[-827, 613], [882, 2], [-649, -730]])
        self.assertEqual(res3, [
            [71, 273, 610, -819, 493, -996, -74, -112, 255, -712, 190, -579, -805, -705, 102, -466, 861, 297, -20, -411,
             902, 472, 777, 330],
            [-119, -441, 671, -21, -112, -333, 26, -751, 76, 870, 575, -183, -344, -223, -532, -411, -785, 704, 512,
             265, 549, -763, -681, 338],
            [-981, 975, -722, 208, -131, -249, -385, 982, 609, -169, -606, 416, -577, -461, -350, 652, -397, -871, -8,
             -638, -311, 689, -827, 647],
            [-925, 342, -520, -813, 972, 9, 845, 374, 899, -928, 720, -279, -915, -795, -808, -965, -768, 239, 322,
             -903, -570, 732, -8, -629],
            [480, -946, 198, 280, 539, -690, -7, -754, 474, -192, -390, 482, 880, -325, 688, -1000, -648, 244, 894,
             -770, 756, -104, -37, 649],
            [968, 984, 160, -373, -219, 944, -969, 473, 702, -343, 271, 93, -402, -546, -36, 651, -952, -838, -125,
             -286, -582, -858, 802, 966],
            [-697, 627, 205, 707, -122, -403, -426, 574, -245, -445, 848, -504, 955, -260, -30, -275, 576, 735, -483,
             667, 630, 742, -950, -855]])
        self.assertEqual(res4, [[6], [5], [1], [2], [3], [4], [7]])

    def test_failure_answers(self):
        sol = v1.Solution()

        res1 = sol.shiftGrid([[1, 2, 3], [2, 3, 4]], 1)
        res2 = sol.shiftGrid([[-649, -730], [-827, 613], [882, 2]], 58)
        res3 = sol.shiftGrid([[-705, 102, -466, 861, 297, -20, -411, 902, 472, 777, 330, -119, -441, 671, -21, -112,
                               -333, 26, -751, 76, 870, 575, -183, -344],
                              [-223, -532, -411, -785, 704, 512, 265, 549, -763, -681, 338, -981, 975, -722, 208, -131,
                               -249, -385, 982, 609, -169, -606, 416, -577],
                              [-461, -350, 652, -397, -871, -8, -638, -311, 689, -827, 647, -925, 342, -520, -813, 972,
                               9, 845, 374, 899, -928, 720, -279, -915],
                              [-795, -808, -965, -768, 239, 322, -903, -570, 732, -8, -629, 480, -946, 198, 280, 539,
                               -690, -7, -754, 474, -192, -390, 482, 880],
                              [-325, 688, -1000, -648, 244, 894, -770, 756, -104, -37, 649, 968, 984, 160, -373, -219,
                               944, -969, 473, 702, -343, 271, 93, -402],
                              [-546, -36, 651, -952, -838, -125, -286, -582, -858, 802, 966, -697, 627, 205, 707, -122,
                               -403, -426, 574, -245, -445, 848, -504, 955],
                              [-260, -30, -275, 576, 735, -483, 667, 630, 742, -950, -855, 71, 273, 610, -819, 493,
                               -996, -74, -112, 255, -712, 190, -579, -805]], 13)
        res4 = sol.shiftGrid([[1], [2], [3], [4], [7], [6], [5]], 23)

        self.assertFalse(res1 != [[4, 1, 2], [3, 2, 3]])
        self.assertFalse(res2 != [[-827, 613], [882, 2], [-649, -730]])
        self.assertFalse(res3 != [
            [71, 273, 610, -819, 493, -996, -74, -112, 255, -712, 190, -579, -805, -705, 102, -466, 861, 297, -20, -411,
             902, 472, 777, 330],
            [-119, -441, 671, -21, -112, -333, 26, -751, 76, 870, 575, -183, -344, -223, -532, -411, -785, 704, 512,
             265, 549, -763, -681, 338],
            [-981, 975, -722, 208, -131, -249, -385, 982, 609, -169, -606, 416, -577, -461, -350, 652, -397, -871, -8,
             -638, -311, 689, -827, 647],
            [-925, 342, -520, -813, 972, 9, 845, 374, 899, -928, 720, -279, -915, -795, -808, -965, -768, 239, 322,
             -903, -570, 732, -8, -629],
            [480, -946, 198, 280, 539, -690, -7, -754, 474, -192, -390, 482, 880, -325, 688, -1000, -648, 244, 894,
             -770, 756, -104, -37, 649],
            [968, 984, 160, -373, -219, 944, -969, 473, 702, -343, 271, 93, -402, -546, -36, 651, -952, -838, -125,
             -286, -582, -858, 802, 966],
            [-697, 627, 205, 707, -122, -403, -426, 574, -245, -445, 848, -504, 955, -260, -30, -275, 576, 735, -483,
             667, 630, 742, -950, -855]])
        self.assertFalse(res4 != [[6], [5], [1], [2], [3], [4], [7]])


class V2Shift2DGridTestCase(unittest.TestCase):
    def test_correct_answers(self):
        sol = v2.Solution()

        res1 = sol.shiftGrid([[1, 2, 3], [2, 3, 4]], 1)
        res2 = sol.shiftGrid([[-649, -730], [-827, 613], [882, 2]], 58)
        res3 = sol.shiftGrid([[-705, 102, -466, 861, 297, -20, -411, 902, 472, 777, 330, -119, -441, 671, -21, -112,
                               -333, 26, -751, 76, 870, 575, -183, -344],
                              [-223, -532, -411, -785, 704, 512, 265, 549, -763, -681, 338, -981, 975, -722, 208, -131,
                               -249, -385, 982, 609, -169, -606, 416, -577],
                              [-461, -350, 652, -397, -871, -8, -638, -311, 689, -827, 647, -925, 342, -520, -813, 972,
                               9, 845, 374, 899, -928, 720, -279, -915],
                              [-795, -808, -965, -768, 239, 322, -903, -570, 732, -8, -629, 480, -946, 198, 280, 539,
                               -690, -7, -754, 474, -192, -390, 482, 880],
                              [-325, 688, -1000, -648, 244, 894, -770, 756, -104, -37, 649, 968, 984, 160, -373, -219,
                               944, -969, 473, 702, -343, 271, 93, -402],
                              [-546, -36, 651, -952, -838, -125, -286, -582, -858, 802, 966, -697, 627, 205, 707, -122,
                               -403, -426, 574, -245, -445, 848, -504, 955],
                              [-260, -30, -275, 576, 735, -483, 667, 630, 742, -950, -855, 71, 273, 610, -819, 493,
                               -996, -74, -112, 255, -712, 190, -579, -805]], 13)
        res4 = sol.shiftGrid([[1], [2], [3], [4], [7], [6], [5]], 23)

        self.assertEqual(res1, [[4, 1, 2], [3, 2, 3]])
        self.assertEqual(res2, [[-827, 613], [882, 2], [-649, -730]])
        self.assertEqual(res3, [
            [71, 273, 610, -819, 493, -996, -74, -112, 255, -712, 190, -579, -805, -705, 102, -466, 861, 297, -20, -411,
             902, 472, 777, 330],
            [-119, -441, 671, -21, -112, -333, 26, -751, 76, 870, 575, -183, -344, -223, -532, -411, -785, 704, 512,
             265, 549, -763, -681, 338],
            [-981, 975, -722, 208, -131, -249, -385, 982, 609, -169, -606, 416, -577, -461, -350, 652, -397, -871, -8,
             -638, -311, 689, -827, 647],
            [-925, 342, -520, -813, 972, 9, 845, 374, 899, -928, 720, -279, -915, -795, -808, -965, -768, 239, 322,
             -903, -570, 732, -8, -629],
            [480, -946, 198, 280, 539, -690, -7, -754, 474, -192, -390, 482, 880, -325, 688, -1000, -648, 244, 894,
             -770, 756, -104, -37, 649],
            [968, 984, 160, -373, -219, 944, -969, 473, 702, -343, 271, 93, -402, -546, -36, 651, -952, -838, -125,
             -286, -582, -858, 802, 966],
            [-697, 627, 205, 707, -122, -403, -426, 574, -245, -445, 848, -504, 955, -260, -30, -275, 576, 735, -483,
             667, 630, 742, -950, -855]])
        self.assertEqual(res4, [[6], [5], [1], [2], [3], [4], [7]])

    def test_failure_answers(self):
        sol = v2.Solution()

        res1 = sol.shiftGrid([[1, 2, 3], [2, 3, 4]], 1)
        res2 = sol.shiftGrid([[-649, -730], [-827, 613], [882, 2]], 58)
        res3 = sol.shiftGrid([[-705, 102, -466, 861, 297, -20, -411, 902, 472, 777, 330, -119, -441, 671, -21, -112,
                               -333, 26, -751, 76, 870, 575, -183, -344],
                              [-223, -532, -411, -785, 704, 512, 265, 549, -763, -681, 338, -981, 975, -722, 208, -131,
                               -249, -385, 982, 609, -169, -606, 416, -577],
                              [-461, -350, 652, -397, -871, -8, -638, -311, 689, -827, 647, -925, 342, -520, -813, 972,
                               9, 845, 374, 899, -928, 720, -279, -915],
                              [-795, -808, -965, -768, 239, 322, -903, -570, 732, -8, -629, 480, -946, 198, 280, 539,
                               -690, -7, -754, 474, -192, -390, 482, 880],
                              [-325, 688, -1000, -648, 244, 894, -770, 756, -104, -37, 649, 968, 984, 160, -373, -219,
                               944, -969, 473, 702, -343, 271, 93, -402],
                              [-546, -36, 651, -952, -838, -125, -286, -582, -858, 802, 966, -697, 627, 205, 707, -122,
                               -403, -426, 574, -245, -445, 848, -504, 955],
                              [-260, -30, -275, 576, 735, -483, 667, 630, 742, -950, -855, 71, 273, 610, -819, 493,
                               -996, -74, -112, 255, -712, 190, -579, -805]], 13)
        res4 = sol.shiftGrid([[1], [2], [3], [4], [7], [6], [5]], 23)

        self.assertFalse(res1 != [[4, 1, 2], [3, 2, 3]])
        self.assertFalse(res2 != [[-827, 613], [882, 2], [-649, -730]])
        self.assertFalse(res3 != [
            [71, 273, 610, -819, 493, -996, -74, -112, 255, -712, 190, -579, -805, -705, 102, -466, 861, 297, -20, -411,
             902, 472, 777, 330],
            [-119, -441, 671, -21, -112, -333, 26, -751, 76, 870, 575, -183, -344, -223, -532, -411, -785, 704, 512,
             265, 549, -763, -681, 338],
            [-981, 975, -722, 208, -131, -249, -385, 982, 609, -169, -606, 416, -577, -461, -350, 652, -397, -871, -8,
             -638, -311, 689, -827, 647],
            [-925, 342, -520, -813, 972, 9, 845, 374, 899, -928, 720, -279, -915, -795, -808, -965, -768, 239, 322,
             -903, -570, 732, -8, -629],
            [480, -946, 198, 280, 539, -690, -7, -754, 474, -192, -390, 482, 880, -325, 688, -1000, -648, 244, 894,
             -770, 756, -104, -37, 649],
            [968, 984, 160, -373, -219, 944, -969, 473, 702, -343, 271, 93, -402, -546, -36, 651, -952, -838, -125,
             -286, -582, -858, 802, 966],
            [-697, 627, 205, 707, -122, -403, -426, 574, -245, -445, 848, -504, 955, -260, -30, -275, 576, 735, -483,
             667, 630, 742, -950, -855]])
        self.assertFalse(res4 != [[6], [5], [1], [2], [3], [4], [7]])
